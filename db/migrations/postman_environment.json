{
  "info": {
    "_postman_id": "af1f6f3b-3c5b-4a2e-9b3b-2a1d9d0b7c01",
    "name": "KUB API (RBAC, v3 – phone verification, tasks v2, telegram, full routes)",
    "description": "Коллекция под актуальный бэкенд.\nФлоу: /register → /register/confirm → /login → /refresh.\nРоли: sales(10), staff(15), operations(20), audit(30), management(40), admin(50).\nВсе роуты из routes.SetupRoutes добавлены. Добавлены интеграции Telegram: /integrations/telegram/request-link (JWT) и публичный webhook (внешний, не дергать из Postman). Обновлены статусы задач: new|in_progress|done|cancelled. Добавлены поля reminder_at/priority.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth (public)",
      "item": [
        {
          "name": "Register (sales=10, sends SMS)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{baseUrl}}/register", "host": ["{{baseUrl}}"], "path": ["register"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Acme LLC\",\n  \"bin_iin\": \"123456789012\",\n  \"email\": \"sales1@example.com\",\n  \"password\": \"sales12345\",\n  \"phone\": \"+77000000000\"\n}"
            }
          },
          "description": "Создаёт пользователя (role=sales, is_verified=false) и отправляет SMS на phone.",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', ()=>pm.response.to.have.status(201));",
                  "const data = pm.response.json();",
                  "pm.collectionVariables.set('userId', String(data?.user?.id || data?.id || ''));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Register: Resend Code",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{baseUrl}}/register/resend", "host": ["{{baseUrl}}"], "path": ["register", "resend"] },
            "body": { "mode": "raw", "raw": "{\n  \"user_id\": {{userId}},\n  \"phone\": \"+77000000000\"\n}" }
          },
          "description": "Повторная отправка кода. При первом/просроченном коде phone обязателен."
        },
        {
          "name": "Register: Confirm Code",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{baseUrl}}/register/confirm", "host": ["{{baseUrl}}"], "path": ["register", "confirm"] },
            "body": { "mode": "raw", "raw": "{\n  \"user_id\": {{userId}},\n  \"code\": \"123456\"\n}" }
          },
          "description": "После успеха: is_verified=true, verified_at=NOW()."
        },
        {
          "name": "Login (blocked if not verified)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{baseUrl}}/login", "host": ["{{baseUrl}}"], "path": ["login"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"sales1@example.com\",\n  \"password\": \"sales12345\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', ()=>pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "const at = data?.tokens?.access_token || data?.access_token; const rt = data?.tokens?.refresh_token || data?.refresh_token;",
                  "if (at) pm.collectionVariables.set('accessToken', at);",
                  "if (rt) pm.collectionVariables.set('refreshToken', rt);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Refresh (rotate refresh)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{baseUrl}}/refresh", "host": ["{{baseUrl}}"], "path": ["refresh"] },
            "body": { "mode": "raw", "raw": "{\n  \"refresh_token\": \"{{refreshToken}}\"\n}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', ()=>pm.response.to.have.status(200));",
                  "const d = pm.response.json();",
                  "const at = d?.tokens?.access_token || d?.access_token;",
                  "const rt = d?.tokens?.refresh_token || d?.refresh_token;",
                  "if (at) pm.collectionVariables.set('accessToken', at);",
                  "if (rt) pm.collectionVariables.set('refreshToken', rt);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "description": "Публичный роут. Меняет refresh и возвращает новый access."
        }
      ]
    },
    {
      "name": "Integrations (Telegram)",
      "item": [
        {
          "name": "Request Telegram Link Code (JWT)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/integrations/telegram/request-link",
              "host": ["{{baseUrl}}"],
              "path": ["integrations", "telegram", "request-link"]
            },
            "body": { "mode": "raw", "raw": "{}" }
          },
          "description": "Вернёт одноразовый код (TTL задаётся на сервере, обычно ~10 минут). В Telegram боту отправь: /link <код>.",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 or 201', ()=>pm.expect([200,201]).to.include(pm.response.code));",
                  "const d = pm.response.json();",
                  "pm.collectionVariables.set('tgCode', String(d?.code || d?.data?.code || ''));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Users (Mgmt/Admin/Audit read; Admin manage)",
      "item": [
        {
          "name": "Create User (Admin) – SALES(10)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Sales Dept\",\n  \"bin_iin\": \"990011223300\",\n  \"email\": \"sales2@example.com\",\n  \"password\": \"sales2345\",\n  \"phone\": \"+77000000002\",\n  \"role_id\": 10\n}"
            }
          }
        },
        {
          "name": "Create User (Admin) – OPERATIONS(20)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Ops Dept\",\n  \"bin_iin\": \"990011223344\",\n  \"email\": \"ops@example.com\",\n  \"password\": \"ops12345\",\n  \"phone\": \"+77000000003\",\n  \"role_id\": 20\n}"
            }
          }
        },
        {
          "name": "Create User (Admin) – AUDIT(30)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Audit\",\n  \"bin_iin\": \"990011223355\",\n  \"email\": \"audit@example.com\",\n  \"password\": \"audit12345\",\n  \"phone\": \"+77000000004\",\n  \"role_id\": 30\n}"
            }
          }
        },
        {
          "name": "Create User (Admin) – MANAGEMENT(40)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Management\",\n  \"bin_iin\": \"990011223366\",\n  \"email\": \"mgmt@example.com\",\n  \"password\": \"mgmt12345\",\n  \"phone\": \"+77000000005\",\n  \"role_id\": 40\n}"
            }
          }
        },
        {
          "name": "Create User (Admin) – ADMIN(50)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Admin\",\n  \"bin_iin\": \"990011223377\",\n  \"email\": \"admin2@example.com\",\n  \"password\": \"admin2345\",\n  \"phone\": \"+77000000006\",\n  \"role_id\": 50\n}"
            }
          }
        },
        {
          "name": "Create User (Admin) – STAFF(15)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/users", "host": ["{{baseUrl}}"], "path": ["users"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"company_name\": \"Staff\",\n  \"bin_iin\": \"990011223388\",\n  \"email\": \"staff@example.com\",\n  \"password\": \"staff12345\",\n  \"phone\": \"+77000000007\",\n  \"role_id\": 15\n}"
            }
          }
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [{ "key": "page", "value": "1" }, { "key": "limit", "value": "50" }]
            }
          }
        },
        {
          "name": "Get User By ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/users/1", "host": ["{{baseUrl}}"], "path": ["users", "1"] }
          }
        },
        {
          "name": "Update User (self or Admin)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/users/1", "host": ["{{baseUrl}}"], "path": ["users", "1"] },
            "body": { "mode": "raw", "raw": "{\n  \"company_name\": \"Acme Updated\",\n  \"bin_iin\": \"123456789012\",\n  \"email\": \"sales1@example.com\",\n  \"phone\": \"+77000000000\"\n}" }
          }
        },
        {
          "name": "Delete User (Admin)",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/users/5", "host": ["{{baseUrl}}"], "path": ["users", "5"] }
          }
        },
        {
          "name": "Users Count",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/users/count", "host": ["{{baseUrl}}"], "path": ["users", "count"] }
          }
        },
        {
          "name": "Users Count by Role",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/users/count/role/10", "host": ["{{baseUrl}}"], "path": ["users", "count", "role", "10"] }
          }
        }
      ]
    },
    {
      "name": "Roles (Admin only)",
      "item": [
        {
          "name": "Create Role",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/roles", "host": ["{{baseUrl}}"], "path": ["roles"] },
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"custom\",\n  \"description\": \"custom role\"\n}" }
          }
        },
        {
          "name": "List Roles",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/roles", "host": ["{{baseUrl}}"], "path": ["roles"] }
          }
        },
        {
          "name": "Get Role By ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/roles/10", "host": ["{{baseUrl}}"], "path": ["roles", "10"] }
          }
        },
        {
          "name": "Update Role",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/roles/10", "host": ["{{baseUrl}}"], "path": ["roles", "10"] },
            "body": { "mode": "raw", "raw": "{\n  \"name\": \"sales\",\n  \"description\": \"updated\"\n}" }
          }
        },
        {
          "name": "Delete Role",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/roles/60", "host": ["{{baseUrl}}"], "path": ["roles", "60"] }
          }
        },
        {
          "name": "Roles Count",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/roles/count", "host": ["{{baseUrl}}"], "path": ["roles", "count"] }
          }
        },
        {
          "name": "Roles with User Counts",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/roles/with-user-counts", "host": ["{{baseUrl}}"], "path": ["roles", "with-user-counts"] }
          }
        }
      ]
    },
    {
      "name": "Leads",
      "item": [
        {
          "name": "Create Lead",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/leads", "host": ["{{baseUrl}}"], "path": ["leads"] },
            "body": { "mode": "raw", "raw": "{\n  \"title\": \"Client A\",\n  \"description\": \"From expo\",\n  \"status\": \"new\"\n}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', ()=>pm.response.to.have.status(201));",
                  "const lead = pm.response.json();",
                  "pm.collectionVariables.set('leadId', String(lead?.id || ''));",
                  "pm.collectionVariables.set('leadOwnerId', String(lead?.owner_id || ''));",
                  "pm.test('Lead ID captured', ()=> pm.expect(pm.collectionVariables.get('leadId')).to.not.be.empty);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Leads",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/leads?page=1&size=20",
              "host": ["{{baseUrl}}"],
              "path": ["leads"],
              "query": [{ "key": "page", "value": "1" }, { "key": "size", "value": "20" }]
            }
          }
        },
        {
          "name": "Get Lead By ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/leads/{{leadId}}", "host": ["{{baseUrl}}"], "path": ["leads", "{{leadId}}"] }
          }
        },
        {
          "name": "Update Lead",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/leads/{{leadId}}", "host": ["{{baseUrl}}"], "path": ["leads", "{{leadId}}"] },
            "body": { "mode": "raw", "raw": "{\n  \"title\": \"Client A (updated)\",\n  \"description\": \"Notes\",\n  \"status\": \"confirmed\"\n}" }
          }
        },
        {
          "name": "Lead: Status → in_review",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/leads/{{leadId}}/status", "host": ["{{baseUrl}}"], "path": ["leads", "{{leadId}}", "status"] },
            "body": { "mode": "raw", "raw": "{\n  \"to\": \"in_review\",\n  \"comment\": \"Передаю на проверку\"\n}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', ()=>pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.test('Status is in_review', ()=> pm.expect(data.status).to.eql('in_review'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Lead: Status → confirmed",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/leads/{{leadId}}/status", "host": ["{{baseUrl}}"], "path": ["leads", "{{leadId}}", "status"] },
            "body": { "mode": "raw", "raw": "{\n  \"to\": \"confirmed\",\n  \"comment\": \"Контакт подтвержден\"\n}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', ()=>pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.test('Status is confirmed', ()=> pm.expect(data.status).to.eql('confirmed'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "description": "Готовит лид к конвертации."
        },
        {
          "name": "Assign Lead (owner change)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/leads/{{leadId}}/assign", "host": ["{{baseUrl}}"], "path": ["leads", "{{leadId}}", "assign"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignee_id\": {{leadOwnerId}},\n  \"comment\": \"Передаю лид\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', ()=>pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "const req = JSON.parse(pm.request.body.raw || '{}');",
                  "pm.test('Owner updated', ()=> pm.expect(data.owner_id).to.eql(req.assignee_id));",
                  "pm.collectionVariables.set('leadOwnerId', String(data.owner_id || ''));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "description": "Меняет owner_id лида. Для sales разрешён только self-assign."
        },
        {
          "name": "Convert Lead → Deal",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/leads/{{leadId}}/convert", "host": ["{{baseUrl}}"], "path": ["leads", "{{leadId}}", "convert"] },
            "body": { "mode": "raw", "raw": "{\n  \"amount\": \"50000\",\n  \"currency\": \"USD\"\n}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', ()=>pm.response.to.have.status(201));",
                  "const deal = pm.response.json();",
                  "pm.collectionVariables.set('dealId', String(deal?.id || ''));",
                  "pm.test('Deal ID captured', ()=> pm.expect(pm.collectionVariables.get('dealId')).to.not.be.empty);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "description": "Создаёт сделку из подтверждённого лида."
        }
      ]
    },
    {
      "name": "Deals",
      "item": [
        {
          "name": "Create Deal",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/deals", "host": ["{{baseUrl}}"], "path": ["deals"] },
            "body": { "mode": "raw", "raw": "{\n  \"lead_id\": {{leadId}},\n  \"amount\": \"50000\",\n  \"currency\": \"USD\",\n  \"status\": \"new\"\n}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201 Created', ()=>pm.response.to.have.status(201));",
                  "const deal = pm.response.json();",
                  "pm.collectionVariables.set('dealId', String(deal?.id || ''));",
                  "pm.test('Deal ID captured', ()=> pm.expect(pm.collectionVariables.get('dealId')).to.not.be.empty);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Deals",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/deals?page=1&size=20",
              "host": ["{{baseUrl}}"],
              "path": ["deals"],
              "query": [{ "key": "page", "value": "1" }, { "key": "size", "value": "20" }]
            }
          }
        },
        {
          "name": "Get Deal By ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/deals/{{dealId}}", "host": ["{{baseUrl}}"], "path": ["deals", "{{dealId}}"] }
          }
        },
        {
          "name": "Update Deal",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/deals/{{dealId}}", "host": ["{{baseUrl}}"], "path": ["deals", "{{dealId}}"] },
            "body": { "mode": "raw", "raw": "{\n  \"lead_id\": {{leadId}},\n  \"amount\": \"52000\",\n  \"currency\": \"USD\",\n  \"status\": \"negotiation\"\n}" }
          }
        },
        {
          "name": "Deal: Status → in_progress",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/deals/{{dealId}}/status", "host": ["{{baseUrl}}"], "path": ["deals", "{{dealId}}", "status"] },
            "body": { "mode": "raw", "raw": "{\n  \"to\": \"in_progress\",\n  \"comment\": \"Начали работу по сделке\"\n}" }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', ()=>pm.response.to.have.status(200));",
                  "const data = pm.response.json();",
                  "pm.test('Status is in_progress', ()=> pm.expect(data.status).to.eql('in_progress'));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "description": "Переводит сделку в работу."
        },
        {
          "name": "Delete Deal",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/deals/{{dealId}}", "host": ["{{baseUrl}}"], "path": ["deals", "{{dealId}}"] }
          }
        }
      ]
    },
    {
      "name": "Documents",
      "item": [
        {
          "name": "Create Document (by deal)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/documents", "host": ["{{baseUrl}}"], "path": ["documents"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deal_id\": {{dealId}},\n  \"doc_type\": \"contract\",\n  \"file_path\": \"contract_v1.pdf\",\n  \"status\": \"draft\"\n}"
            }
          }
        },
        {
          "name": "Create Document FROM LEAD",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/documents/create-from-lead", "host": ["{{baseUrl}}"], "path": ["documents", "create-from-lead"] },
            "body": { "mode": "raw", "raw": "{\n  \"lead_id\": {{leadId}},\n  \"doc_type\": \"contract\"\n}" }
          }
        },
        {
          "name": "List Documents (global)",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/documents?page=1&size=50",
              "host": ["{{baseUrl}}"],
              "path": ["documents"],
              "query": [{ "key": "page", "value": "1" }, { "key": "size", "value": "50" }]
            }
          }
        },
        {
          "name": "List Documents BY DEAL",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/documents/deal/{{dealId}}", "host": ["{{baseUrl}}"], "path": ["documents", "deal", "{{dealId}}"] }
          }
        },
        {
          "name": "Get Document by ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/documents/1", "host": ["{{baseUrl}}"], "path": ["documents", "1"] }
          }
        },
        {
          "name": "Open PDF inline",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/documents/1/file", "host": ["{{baseUrl}}"], "path": ["documents", "1", "file"] }
          }
        },
        {
          "name": "Download PDF",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/documents/1/download", "host": ["{{baseUrl}}"], "path": ["documents", "1", "download"] }
          }
        },
        {
          "name": "Submit Document (draft → under_review)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/documents/1/submit", "host": ["{{baseUrl}}"], "path": ["documents", "1", "submit"] }
          }
        },
        {
          "name": "Review Document (approve/return)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/documents/1/review", "host": ["{{baseUrl}}"], "path": ["documents", "1", "review"] },
            "body": { "mode": "raw", "raw": "{\n  \"action\": \"approve\"\n}" }
          }
        },
        {
          "name": "Sign Document (approved|returned → signed)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/documents/1/sign", "host": ["{{baseUrl}}"], "path": ["documents", "1", "sign"] }
          }
        },
        {
          "name": "Delete Document",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/documents/1", "host": ["{{baseUrl}}"], "path": ["documents", "1"] }
          }
        }
      ]
    },
    {
      "name": "Tasks (staff/ops/mgmt/admin)",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/tasks", "host": ["{{baseUrl}}"], "path": ["tasks"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignee_id\": 2,\n  \"entity_id\": {{dealId}},\n  \"entity_type\": \"deal\",\n  \"title\": \"Prepare contract\",\n  \"description\": \"Draft v1\",\n  \"due_date\": \"2025-12-30T12:00:00Z\",\n  \"reminder_at\": \"2025-12-30T09:00:00Z\",\n  \"priority\": \"high\"\n}"
            }
          }
        },
        {
          "name": "List Tasks",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/tasks", "host": ["{{baseUrl}}"], "path": ["tasks"] }
          }
        },
        {
          "name": "Get Task By ID",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/tasks/1", "host": ["{{baseUrl}}"], "path": ["tasks", "1"] }
          }
        },
        {
          "name": "Update Task (PUT)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/tasks/1", "host": ["{{baseUrl}}"], "path": ["tasks", "1"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Prepare contract (updated)\",\n  \"description\": \"Draft v2\",\n  \"due_date\": \"2025-12-31T12:00:00Z\",\n  \"reminder_at\": \"2025-12-31T09:00:00Z\",\n  \"priority\": \"urgent\",\n  \"status\": \"in_progress\"\n}"
            }
          }
        },
        {
          "name": "Task: Change Status → in_progress",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/tasks/1/status", "host": ["{{baseUrl}}"], "path": ["tasks", "1", "status"] },
            "body": { "mode": "raw", "raw": "{\n  \"to\": \"in_progress\",\n  \"comment\": \"Начал делать\"\n}" }
          }
        },
        {
          "name": "Task: Assign",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/tasks/1/assign", "host": ["{{baseUrl}}"], "path": ["tasks", "1", "assign"] },
            "body": { "mode": "raw", "raw": "{\n  \"assignee_id\": 1,\n  \"comment\": \"Беру\"\n}" }
          }
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/tasks/1", "host": ["{{baseUrl}}"], "path": ["tasks", "1"] }
          }
        }
      ]
    },
    {
      "name": "Messages (staff/ops/mgmt/admin)",
      "item": [
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/messages", "host": ["{{baseUrl}}"], "path": ["messages"] },
            "body": { "mode": "raw", "raw": "{\n  \"receiver_id\": 2,\n  \"content\": \"Hello!\"\n}" }
          }
        },
        {
          "name": "Get Conversations",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/messages/conversations", "host": ["{{baseUrl}}"], "path": ["messages", "conversations"] }
          }
        },
        {
          "name": "Conversation History (with user 2)",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/messages/history/2", "host": ["{{baseUrl}}"], "path": ["messages", "history", "2"] }
          }
        }
      ]
    },
    {
      "name": "SMS (Documents) – sales/ops/mgmt/admin)",
      "item": [
        {
          "name": "Send SMS for Document",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/sms/send", "host": ["{{baseUrl}}"], "path": ["sms", "send"] },
            "body": { "mode": "raw", "raw": "{\n  \"document_id\": 1,\n  \"phone\": \"+77000000000\"\n}" }
          }
        },
        {
          "name": "Resend SMS (by document_id)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/sms/resend", "host": ["{{baseUrl}}"], "path": ["sms", "resend"] },
            "body": { "mode": "raw", "raw": "{\n  \"document_id\": 1\n}" }
          }
        },
        {
          "name": "Confirm SMS (document)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": { "raw": "{{baseUrl}}/sms/confirm", "host": ["{{baseUrl}}"], "path": ["sms", "confirm"] },
            "body": { "mode": "raw", "raw": "{\n  \"document_id\": 1,\n  \"code\": \"123456\"\n}" }
          }
        },
        {
          "name": "Latest SMS by Document",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/sms/latest/1", "host": ["{{baseUrl}}"], "path": ["sms", "latest", "1"] }
          }
        },
        {
          "name": "Delete SMS by Document",
          "request": {
            "method": "DELETE",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/sms/1", "host": ["{{baseUrl}}"], "path": ["sms", "1"] }
          }
        }
      ]
    },
    {
      "name": "Reports (read-only: audit/ops/mgmt/admin)",
      "item": [
        {
          "name": "Summary",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": { "raw": "{{baseUrl}}/reports/summary", "host": ["{{baseUrl}}"], "path": ["reports", "summary"] }
          }
        },
        {
          "name": "Filter Leads",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/reports/leads/filter?status=confirmed&owner_id=1&sortBy=created_at&order=desc&limit=20&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "leads", "filter"],
              "query": [
                { "key": "status", "value": "confirmed" },
                { "key": "owner_id", "value": "1" },
                { "key": "sortBy", "value": "created_at" },
                { "key": "order", "value": "desc" },
                { "key": "limit", "value": "20" },
                { "key": "offset", "value": "0" }
              ]
            }
          }
        },
        {
          "name": "Filter Deals",
          "request": {
            "method": "GET",
            "header": [{ "key": "Authorization", "value": "Bearer {{accessToken}}" }],
            "url": {
              "raw": "{{baseUrl}}/reports/deals/filter?status=new&currency=USD&amountMin=0&amountMax=0&sortBy=created_at&order=desc&limit=20&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["reports", "deals", "filter"],
              "query": [
                { "key": "status", "value": "new" },
                { "key": "currency", "value": "USD" },
                { "key": "amountMin", "value": "0" },
                { "key": "amountMax", "value": "0" },
                { "key": "sortBy", "value": "created_at" },
                { "key": "order", "value": "desc" },
                { "key": "limit", "value": "20" },
                { "key": "offset", "value": "0" }
              ]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:4000" },
    { "key": "accessToken", "value": "" },
    { "key": "refreshToken", "value": "" },
    { "key": "userId", "value": "" },
    { "key": "leadId", "value": "" },
    { "key": "leadOwnerId", "value": "" },
    { "key": "dealId", "value": "" },
    { "key": "tgCode", "value": "" }
  ]
}
